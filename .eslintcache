[{"C:\\Final-year-p400\\doctors-portal\\src\\App.js":"1","C:\\Final-year-p400\\doctors-portal\\src\\index.js":"2","C:\\Final-year-p400\\doctors-portal\\src\\serviceWorker.js":"3","C:\\Final-year-p400\\doctors-portal\\src\\components\\Home\\Home\\Home.js":"4","C:\\Final-year-p400\\doctors-portal\\src\\components\\Home\\Header\\Header.js":"5","C:\\Final-year-p400\\doctors-portal\\src\\components\\Home\\FeatureServices\\FeatureServices.js":"6","C:\\Final-year-p400\\doctors-portal\\src\\components\\Home\\MakesAppointmnet\\MakesAppointment.js":"7","C:\\Final-year-p400\\doctors-portal\\src\\components\\Home\\Testimonials\\Testimonials.js":"8","C:\\Final-year-p400\\doctors-portal\\src\\components\\Home\\Services\\Services.js":"9","C:\\Final-year-p400\\doctors-portal\\src\\components\\Home\\Blog\\Blog.js":"10","C:\\Final-year-p400\\doctors-portal\\src\\components\\Home\\Doctors\\Doctors.js":"11","C:\\Final-year-p400\\doctors-portal\\src\\components\\Home\\Contact\\Contact.js":"12","C:\\Final-year-p400\\doctors-portal\\src\\components\\Home\\BusinessInfo\\BusinessInfo.js":"13","C:\\Final-year-p400\\doctors-portal\\src\\components\\HeaderMain\\HeaderMain.js":"14","C:\\Final-year-p400\\doctors-portal\\src\\components\\Home\\ServiceDetail\\ServiceDetail.js":"15","C:\\Final-year-p400\\doctors-portal\\src\\components\\Home\\Testimonial\\Testimonial.js":"16","C:\\Final-year-p400\\doctors-portal\\src\\components\\Home\\Doctor\\Doctor.js":"17","C:\\Final-year-p400\\doctors-portal\\src\\components\\Home\\BlogPost\\BlogPost.js":"18","C:\\Final-year-p400\\doctors-portal\\src\\components\\Home\\InfoCard\\InfoCard.js":"19","C:\\Final-year-p400\\doctors-portal\\src\\components\\Shared\\Navbar\\Navbar.js":"20","C:\\Final-year-p400\\doctors-portal\\src\\components\\Shared\\Footer\\Footer.js":"21","C:\\Final-year-p400\\doctors-portal\\src\\components\\Shared\\FooterCol\\FooterCol.js":"22","C:\\Final-year-p400\\doctors-portal\\src\\components\\Appointment\\Appointment\\Appointment.js":"23","C:\\Final-year-p400\\doctors-portal\\src\\components\\Appointment\\BookAppointment\\BookAppointment.js":"24","C:\\Final-year-p400\\doctors-portal\\src\\components\\Appointment\\AppointmentHeader\\AppointmentHeader.js":"25","C:\\Final-year-p400\\doctors-portal\\src\\components\\Appointment\\BookingCard\\BookingCard.js":"26","C:\\Final-year-p400\\doctors-portal\\src\\components\\AppointmentFrom\\AppointmentFrom.js":"27","C:\\Final-year-p400\\doctors-portal\\src\\components\\PrivateRoute\\PrivateRoute.js":"28","C:\\Final-year-p400\\doctors-portal\\src\\components\\Login\\Login.js":"29","C:\\Final-year-p400\\doctors-portal\\src\\components\\Login\\firebase.config.js":"30","C:\\Final-year-p400\\doctors-portal\\src\\components\\DashboardPage\\Dashboard\\Dashboard.js":"31","C:\\Final-year-p400\\doctors-portal\\src\\components\\DashboardPage\\Sidebar\\Sidebar.js":"32","C:\\Final-year-p400\\doctors-portal\\src\\components\\AppointmentsByDate\\AppointmentsByDate.js":"33","C:\\Final-year-p400\\doctors-portal\\src\\components\\AllPatients\\AllPatients.js":"34","C:\\Final-year-p400\\doctors-portal\\src\\components\\AppointmentDataTable\\AppointmentDataTable.js":"35","C:\\Final-year-p400\\doctors-portal\\src\\components\\Dboard\\Dboard.js":"36","C:\\Final-year-p400\\doctors-portal\\src\\components\\CounterCard\\CounterCard.js":"37","C:\\Final-year-p400\\doctors-portal\\src\\components\\AllAppTable\\AllAppTable.js":"38","C:\\Final-year-p400\\doctors-portal\\src\\components\\AllAppRow\\AllAppRow.js":"39","C:\\Final-year-p400\\doctors-portal\\src\\components\\AppointmentShortList\\AppointmentShortList.js":"40","C:\\Final-year-p400\\doctors-portal\\src\\components\\MainDashboard\\MainDashboard.js":"41","C:\\Final-year-p400\\doctors-portal\\src\\components\\VisitButton\\VisitButton.js":"42","C:\\Final-year-p400\\doctors-portal\\src\\components\\DashboardAppointment\\DashboardAppointment.js":"43","C:\\Final-year-p400\\doctors-portal\\src\\components\\AppointmentShortList\\TableRow.js":"44","C:\\Final-year-p400\\doctors-portal\\src\\components\\PrescriptionTable\\PrescriptionTable.js":"45","C:\\Final-year-p400\\doctors-portal\\src\\components\\PrescriptionRow\\PrescriptionRow.js":"46","C:\\Final-year-p400\\doctors-portal\\src\\components\\PrescriptionPage\\PrescriptionPage.js":"47","C:\\Final-year-p400\\doctors-portal\\src\\components\\Testimonials\\Testimonials.js":"48","C:\\Final-year-p400\\doctors-portal\\src\\components\\Testimonial\\Testimonial.js":"49","C:\\Final-year-p400\\doctors-portal\\src\\components\\AddDoctor\\AddDoctor.js":"50"},{"size":3047,"mtime":1615821886139,"results":"51","hashOfConfig":"52"},{"size":520,"mtime":1611760324504,"results":"53","hashOfConfig":"52"},{"size":5227,"mtime":1611760324504,"results":"54","hashOfConfig":"52"},{"size":836,"mtime":1612026989444,"results":"55","hashOfConfig":"52"},{"size":444,"mtime":1612026862630,"results":"56","hashOfConfig":"52"},{"size":1610,"mtime":1614970318867,"results":"57","hashOfConfig":"52"},{"size":1044,"mtime":1614970364553,"results":"58","hashOfConfig":"52"},{"size":1846,"mtime":1614967892201,"results":"59","hashOfConfig":"52"},{"size":1133,"mtime":1614941286496,"results":"60","hashOfConfig":"52"},{"size":1767,"mtime":1611760324222,"results":"61","hashOfConfig":"52"},{"size":1355,"mtime":1615734088032,"results":"62","hashOfConfig":"52"},{"size":1401,"mtime":1611760324238,"results":"63","hashOfConfig":"52"},{"size":1027,"mtime":1612027627454,"results":"64","hashOfConfig":"52"},{"size":846,"mtime":1614939596713,"results":"65","hashOfConfig":"52"},{"size":466,"mtime":1612027983981,"results":"66","hashOfConfig":"52"},{"size":631,"mtime":1611760324238,"results":"67","hashOfConfig":"52"},{"size":1115,"mtime":1615745793903,"results":"68","hashOfConfig":"52"},{"size":751,"mtime":1611760324222,"results":"69","hashOfConfig":"52"},{"size":828,"mtime":1612027625860,"results":"70","hashOfConfig":"52"},{"size":2041,"mtime":1615820623623,"results":"71","hashOfConfig":"52"},{"size":3175,"mtime":1612027329916,"results":"72","hashOfConfig":"52"},{"size":602,"mtime":1612024569418,"results":"73","hashOfConfig":"52"},{"size":767,"mtime":1612162028254,"results":"74","hashOfConfig":"52"},{"size":1652,"mtime":1612162368848,"results":"75","hashOfConfig":"52"},{"size":824,"mtime":1613316839508,"results":"76","hashOfConfig":"52"},{"size":1138,"mtime":1614186292257,"results":"77","hashOfConfig":"52"},{"size":8171,"mtime":1615821396435,"results":"78","hashOfConfig":"52"},{"size":628,"mtime":1612966487707,"results":"79","hashOfConfig":"52"},{"size":7277,"mtime":1615747541890,"results":"80","hashOfConfig":"52"},{"size":717,"mtime":1615744987095,"results":"81","hashOfConfig":"52"},{"size":1909,"mtime":1615732735844,"results":"82","hashOfConfig":"52"},{"size":3611,"mtime":1615746895624,"results":"83","hashOfConfig":"52"},{"size":1756,"mtime":1614701103900,"results":"84","hashOfConfig":"52"},{"size":877,"mtime":1613897831803,"results":"85","hashOfConfig":"52"},{"size":1438,"mtime":1613897450827,"results":"86","hashOfConfig":"52"},{"size":3654,"mtime":1614955300641,"results":"87","hashOfConfig":"52"},{"size":592,"mtime":1613920664943,"results":"88","hashOfConfig":"52"},{"size":5572,"mtime":1614365089946,"results":"89","hashOfConfig":"52"},{"size":2575,"mtime":1614365068733,"results":"90","hashOfConfig":"52"},{"size":929,"mtime":1614357829818,"results":"91","hashOfConfig":"52"},{"size":983,"mtime":1614971212417,"results":"92","hashOfConfig":"52"},{"size":726,"mtime":1614278956922,"results":"93","hashOfConfig":"52"},{"size":3524,"mtime":1614350725870,"results":"94","hashOfConfig":"95"},{"size":1810,"mtime":1614702033626,"results":"96","hashOfConfig":"52"},{"size":5755,"mtime":1614960258149,"results":"97","hashOfConfig":"52"},{"size":3188,"mtime":1614961514655,"results":"98","hashOfConfig":"52"},{"size":3874,"mtime":1614960410673,"results":"99","hashOfConfig":"52"},{"size":1837,"mtime":1614969569623,"results":"100","hashOfConfig":"52"},{"size":683,"mtime":1611829318650,"results":"101","hashOfConfig":"52"},{"size":3349,"mtime":1615719179578,"results":"102","hashOfConfig":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},"pz3hoz",{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"105"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"105"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"105"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"105"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"105"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"105"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"105"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"105"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"105"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"105"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"105"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"18olia1",{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"105"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"105"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"105"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},"C:\\Final-year-p400\\doctors-portal\\src\\App.js",[],["219","220"],"C:\\Final-year-p400\\doctors-portal\\src\\index.js",[],"C:\\Final-year-p400\\doctors-portal\\src\\serviceWorker.js",[],"C:\\Final-year-p400\\doctors-portal\\src\\components\\Home\\Home\\Home.js",[],"C:\\Final-year-p400\\doctors-portal\\src\\components\\Home\\Header\\Header.js",[],"C:\\Final-year-p400\\doctors-portal\\src\\components\\Home\\FeatureServices\\FeatureServices.js",[],"C:\\Final-year-p400\\doctors-portal\\src\\components\\Home\\MakesAppointmnet\\MakesAppointment.js",[],"C:\\Final-year-p400\\doctors-portal\\src\\components\\Home\\Testimonials\\Testimonials.js",[],"C:\\Final-year-p400\\doctors-portal\\src\\components\\Home\\Services\\Services.js",[],"C:\\Final-year-p400\\doctors-portal\\src\\components\\Home\\Blog\\Blog.js",[],"C:\\Final-year-p400\\doctors-portal\\src\\components\\Home\\Doctors\\Doctors.js",["221"],"import React , { useEffect, useState } from 'react';\r\nimport Doctor from '../Doctor/Doctor';\r\nimport doctor from '../../../images/doctor.png'\r\n\r\n// const doctorInfo = [\r\n//     {\r\n        \r\n//         name : 'Wilson Harry',\r\n        \r\n//         img : doctor\r\n//     },\r\n//     {\r\n        \r\n//         name : 'Ema Gomez',\r\n       \r\n//         img : doctor\r\n//     },\r\n//     {\r\n        \r\n//         name : 'Aliza Farari',\r\n        \r\n//         img : doctor\r\n//     }\r\n// ]\r\n\r\nconst Doctors = () => {\r\n    const [doctors, setDoctors] = useState([])\r\n    useEffect( () => {\r\n        fetch('http://localhost:5000/doctors')\r\n        .then(res => res.json())\r\n        .then(data =>{\r\n            setDoctors(data)\r\n            // if(data){\r\n            //     alert('Add doctor')\r\n            // }\r\n        }\r\n       \r\n      )\r\n\r\n    }, [])\r\n   \r\n    return (\r\n        <section className=\"doctors\">\r\n        <div className=\"container\">\r\n            <h5 className=\"text-center  text-primary mb-5\">Our Doctors</h5>\r\n            <div className=\"row\">\r\n                {\r\n                    // doctorInfo.map(doctor => <Doctor doctor={doctor}></Doctor>)\r\n                    doctors.map(doctor =><Doctor key={doctor._id} doctor={doctor} />)\r\n                }              \r\n            </div>\r\n        </div>\r\n    </section>\r\n    );\r\n};\r\n\r\nexport default Doctors;","C:\\Final-year-p400\\doctors-portal\\src\\components\\Home\\Contact\\Contact.js",[],"C:\\Final-year-p400\\doctors-portal\\src\\components\\Home\\BusinessInfo\\BusinessInfo.js",[],"C:\\Final-year-p400\\doctors-portal\\src\\components\\HeaderMain\\HeaderMain.js",[],"C:\\Final-year-p400\\doctors-portal\\src\\components\\Home\\ServiceDetail\\ServiceDetail.js",[],"C:\\Final-year-p400\\doctors-portal\\src\\components\\Home\\Testimonial\\Testimonial.js",[],"C:\\Final-year-p400\\doctors-portal\\src\\components\\Home\\Doctor\\Doctor.js",["222"],"import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n// import { faPhoneAlt } from '@fortawesome/free-solid-svg-icons';\r\nconst Doctor = ({ doctor }) => {\r\n\r\n    return (\r\n        <div className=\"col-md-4 text-center\">\r\n            {\r\n                 \r\n                    // <img style={{ height: '200px' }} className=\"img-fluid mb-3\" src={`http://localhost:5000/${doctor.img}`} alt=\"\" />\r\n                    doctor.image ? <img style={{height: '200px'}} src={`data:image/png;base64,${doctor.image.img}`}/>\r\n                    :\r\n                    <img style={{height: '200px'}} className=\"img-fluid mb-3\" src={`http://localhost:5000/${doctor.img}`} alt=\"\"/>\r\n        }\r\n            <h4 style={{color:'brown'}}>{doctor.name}</h4>\r\n           <strong> <p> {doctor.Qualification}</p></strong>\r\n            <p> {doctor.email}</p>\r\n            <p> {doctor.phone}</p>\r\n            <Link to='/appointment'><button className=\"btn btn-primary\" >GET APPOINTMENT</button></Link>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Doctor;","C:\\Final-year-p400\\doctors-portal\\src\\components\\Home\\BlogPost\\BlogPost.js",[],"C:\\Final-year-p400\\doctors-portal\\src\\components\\Home\\InfoCard\\InfoCard.js",[],"C:\\Final-year-p400\\doctors-portal\\src\\components\\Shared\\Navbar\\Navbar.js",["223","224"],"import React from 'react';\r\nimport fluoride from '../../../images/fluoride.png'\r\nimport { Link } from 'react-router-dom';\r\nimport './Navbar.css'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light\">\r\n \r\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span className=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n <div className='col-md-4'>\r\n <a className=\"nav-link fluoride\"><img src={fluoride} alt=\"\"/></a>\r\n </div>\r\n  <div className=\"collapse navbar-collapse col-md-8\" id=\"navbarSupportedContent\">\r\n    <ul className=\"navbar-nav ml-auto\">\r\n    {/* <li className=\"nav-item active\">\r\n    <a className=\"nav-link fluoride\"><img src={fluoride} alt=\"\"/></a>\r\n      </li> */}\r\n      <li className=\"nav-item active\">\r\n        <a className=\"nav-link mr-5\" style={{color:'#17E7D2'}} href=\"/\">Home <span className=\"sr-only\">(current)</span></a>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <a className=\"nav-link mr-5\" style={{color:'#E71743'}} href=\"/about\">About</a>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <a className=\"nav-link mr-5\" style={{color:'#45EF75',fontWeight:'bold'}} href=\"/dashboard\">Dashboard</a>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <a className={`nav-link mr-5 ${window.location.pathname === '/appointment' ? 'text-secondary' : 'text-white'} text-white`}  href=\"/doctor\">Doctors</a>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <a className={`nav-link mr-5 ${window.location.pathname === '/appointment' ? 'text-secondary' : 'text-white'} text-white`} href=\"/dashboard\">Admin</a>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <a className={`nav-link mr-5 ${window.location.pathname === '/appointment' ? 'text-secondary' : 'text-white'} text-white`} href=\"/contact\">Contact Us</a>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;","C:\\Final-year-p400\\doctors-portal\\src\\components\\Shared\\Footer\\Footer.js",[],"C:\\Final-year-p400\\doctors-portal\\src\\components\\Shared\\FooterCol\\FooterCol.js",[],"C:\\Final-year-p400\\doctors-portal\\src\\components\\Appointment\\Appointment\\Appointment.js",[],"C:\\Final-year-p400\\doctors-portal\\src\\components\\Appointment\\BookAppointment\\BookAppointment.js",[],"C:\\Final-year-p400\\doctors-portal\\src\\components\\Appointment\\AppointmentHeader\\AppointmentHeader.js",[],"C:\\Final-year-p400\\doctors-portal\\src\\components\\Appointment\\BookingCard\\BookingCard.js",[],"C:\\Final-year-p400\\doctors-portal\\src\\components\\AppointmentFrom\\AppointmentFrom.js",["225","226","227","228"],"import React, { useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport date from 'date-and-time'\r\nimport './AppointmentFrom.css';\r\nimport 'react-phone-number-input/style.css'\r\nimport PhoneInput from 'react-phone-number-input'\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nModal.setAppElement('#root')\r\n\r\nconst now = new Date();\r\nconst AppointmentForm = ({ modalIsOpen, closeModal, appointmentOn,visitingHour, time, startTime, date }) => {\r\n    // const [value, onChange] = useState('10:00');\r\n    const [value, setValue] = useState()\r\n    const { register, handleSubmit, errors } = useForm();\r\n    // const history = useHistory();\r\n    //     const onSubmit = data =>{\r\n    //     data.service=appointmentOn;\r\n    //     data.date=date;\r\n    //     data.created= new Date();\r\n\r\n\r\n    //     fetch('http://localhost:5000/addAppointment',{\r\n    //       method:'POST',\r\n    //       headers:{'content-type':'application/json'},\r\n    //       body:JSON.stringify(data)\r\n    //     }) \r\n    //     .then(res => res.json())\r\n    //         .then(success => {\r\n    //             if(success){\r\n    //                 alert('Appointment created successfully.');\r\n    //                 closeModal();\r\n\r\n    //                 // history.push('/dashboard/appointment')\r\n    //             }\r\n    //         })\r\n\r\n\r\n    // }\r\n\r\n    const onSubmit = data => {\r\n        data.status = 'Not Visited';\r\n        data.service = appointmentOn;\r\n        data.date = date.toDateString();\r\n        // data.visitingHour=visitingHour;\r\n        data.created = new Date()\r\n\r\n        fetch('http://localhost:5000/addAppointment', {\r\n            method: 'POST',\r\n            headers: { 'content-type': 'application/json' },\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(res => res.json())\r\n            .then(success => {\r\n                if (success) {\r\n                    alert(`\r\n                   Appointment Created Successfully.\r\n                `)\r\n                    closeModal();\r\n                    // history.push('/dashboard/appointment')\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n                <h2 className=\"text-center text-brand appointmentOn\">{appointmentOn}</h2>\r\n                <p className=\"text-secondary text-center dateOn\"><small>ON {date.toDateString()}</small></p>\r\n                <form className=\"p-5\" onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className=\"form-group\">\r\n                        <h6>Name <span style={{color:'red'}}>*</span></h6>\r\n                        <input type=\"text\" ref={register({ required: true })} name=\"name\" placeholder=\"Your Name\" className=\"form-control\" />\r\n                        {errors.name && <span className=\"text-danger\">This field is required</span>}\r\n\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <h6>Phone Number<span style={{color:'red'}}>*</span></h6>\r\n                    <PhoneInput\r\n      placeholder=\"Enter phone number\"\r\n      value={value}\r\n      onChange={setValue}/>\r\n                        {errors.phone && <span className=\"text-danger\">This field is required</span>}\r\n                    </div>\r\n                    <div className=\"form-group row \">\r\n                        <div className=\"col-md-6\">\r\n                        <h6>Email <span style={{color:'red'}}>*</span></h6>\r\n                        <input type=\"text\" ref={register({ required: true })} name=\"email\" placeholder=\"Email\" className=\"form-control\" />\r\n                        {errors.email && <span className=\"text-danger\">This field is required</span>}\r\n                        </div>\r\n                        {/* <div className='col-md-4'>\r\n                        <h6>Doctors<span style={{color:'red'}}>*</span></h6>\r\n                          <select  className=\"form-control\" ref={register({ required: true })} placeholder=\"Doctor\"  >\r\n                                <option  value=\"Not set\">Select Doctor</option>\r\n                                <option value=\"Male\">male</option>\r\n                                <option value=\"Female\">Female</option>\r\n                                <option value=\"Not set\">Other</option>\r\n                            </select>\r\n                            {errors.gender && <span className=\"text-danger\">This field is required</span>}\r\n                        </div> */}\r\n                        <div className=\"col-md-6\">\r\n                        {/* <input name=\"date\"  placeholder=\"dd/MM/yyyy\" ref={register({ required: true, pattern: /(^(((0[1-9]|1[0-9]|2[0-8])[\\/](0[1-9]|1[012]))|((29|30|31)[\\/](0[13578]|1[02]))|((29|30)[\\/](0[4,6,9]|11)))[\\/](19|[2-9][0-9])\\d\\d$)|(^29[\\/]02[\\/](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))/i })} />\r\n                        \r\n                        {errors.date && <span className=\"error\">Valid dd/MM/yyyy Format is required</span>} */}\r\n\r\n\r\n{/* \r\n                        <input name=\"date\"  type='text' defaultValue={date.toDateString()} className=\"form-control\" placeholder=\"date\" ref={register({ required: true})} />\r\n                        \r\n                        {errors.date && <span className=\"error\">Valid dd/MM/yyyy Format is required</span>} */}\r\n                          <h6>Date</h6>\r\n                        <span style={{color:'red'}}>{date.toDateString()}</span>\r\n                        </div>\r\n                        {/* <div className='col-md-4'>\r\n                            <span>{visitingHour}</span>\r\n                        </div> */}\r\n                    </div>\r\n                    <div className=\"form-group row\">\r\n                        <div className=\"col-4\">\r\n                           <h6>Gender<span style={{color:'red'}}>*</span></h6>\r\n                            <select className=\"form-control\" name=\"gender\" ref={register({ required: true })} >\r\n                                <option disabled={true} value=\"Not set\">Select Gender</option>\r\n                                <option value=\"Male\">Male</option>\r\n                                <option value=\"Female\">Female</option>\r\n                                <option value=\"Not set\">Other</option>\r\n                            </select>\r\n                            {errors.gender && <span className=\"text-danger\">This field is required</span>}\r\n\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                        <h6>Age<span style={{color:'red'}}>*</span></h6>\r\n                            <input ref={register({ required: true })} className=\"form-control\" name=\"age\" placeholder=\"Your Age\" type=\"number\" />\r\n                            {errors.age && <span className=\"text-danger\">This field is required</span>}\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                          <h6>Weight<span style={{color:'red'}}>*</span></h6>\r\n                            <input ref={register({ required: true })} className=\"form-control\" name=\"weight\" placeholder=\"Weight\" type=\"number\" />\r\n                            {errors.weight && <span className=\"text-danger\">This field is required</span>}\r\n                        </div>\r\n                        \r\n                        \r\n                       \r\n                    </div>\r\n                    <br />\r\n                    <div className=\"form-group text-right\">\r\n                        <button type=\"submit\" className=\"btn btn-brand\" style={{ backgroundColor: '#1CD9B6 ', color: 'black' }}>Send</button>\r\n                    </div>\r\n                </form>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppointmentForm;\r\n\r\n\r\n","C:\\Final-year-p400\\doctors-portal\\src\\components\\PrivateRoute\\PrivateRoute.js",["229"],"import React, { useContext } from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { UserContext } from '../../App';\r\n\r\nconst PrivateRoute = ({ children, ...rest }) => {\r\n  const [loggedInUser, setLoggedInUser] = useContext(UserContext)\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        loggedInUser.email ? (\r\n          children\r\n        ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: location }\r\n              }}\r\n            />\r\n          )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;","C:\\Final-year-p400\\doctors-portal\\src\\components\\Login\\Login.js",["230","231"],"import React, { useContext, useState } from 'react';\r\nimport  firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport firebaseConfig from './firebase.config';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport LoginBg from '../../images/loginBg.png';\r\nimport { UserContext } from '../../App';\r\nimport { Card, Form } from 'react-bootstrap';\r\nimport './Login.css'\r\n\r\n\r\nconst Login = () => {\r\n\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext)\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const { from } = location.state || { from: { pathname: \"/\" } };\r\n\r\n    if (firebase.apps.length === 0) {\r\n        firebase.initializeApp(firebaseConfig);\r\n    }\r\n\r\n    const [newUser, setNewUser] = useState(false);\r\n    const [user, setUser] = useState({\r\n        isSignedIn: false,\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        photo: ''\r\n    })\r\n\r\n    const handleGoogleSignIn = () => {\r\n        var provider = new firebase.auth.GoogleAuthProvider();\r\n        firebase.auth().signInWithPopup(provider).then(function (result) {\r\n            const { displayName, email } = result.user;\r\n            const signedInUser = { name: displayName, email }\r\n            setLoggedInUser(signedInUser);\r\n            storeAuthToken();\r\n        }).catch(function (error) {\r\n            const errorMessage = error.message;\r\n            console.log(errorMessage);\r\n        });\r\n    }\r\n\r\n    const storeAuthToken = () => {\r\n        firebase.auth().currentUser.getIdToken(/* forceRefresh */ true)\r\n            .then(function (idToken) {\r\n                sessionStorage.setItem('token', idToken);\r\n                history.replace(from);\r\n            }).catch(function (error) {\r\n                // Handle error\r\n            });\r\n    }\r\n\r\n    const handleBlur = (e) => {\r\n        let isFieldValid = true;\r\n        if (e.target.name === 'email') {\r\n            isFieldValid = /\\S+@\\S+\\.\\S+/.test(e.target.value)\r\n        }\r\n        if (e.target.name === 'password') {\r\n            const isPasswordValid = e.target.value.length >= 6;\r\n            const passwordHasNumber = /\\d{1}/.test(e.target.value)\r\n            const validPass = isPasswordValid && passwordHasNumber;\r\n            isFieldValid = isPasswordValid && passwordHasNumber\r\n        }\r\n\r\n        if (isFieldValid) {\r\n            const newUserInfo = { ...user };\r\n            newUserInfo[e.target.name] = e.target.value;\r\n            setUser(newUserInfo)\r\n        }\r\n    }\r\n\r\n    //form submit\r\n    const handleSubmit = (e) => {\r\n        if (newUser && user.email && user.password) {\r\n            firebase.auth().createUserWithEmailAndPassword(user.email, user.password)\r\n                .then(res => {\r\n                    const newUserInfo = { ...user }\r\n                    newUserInfo.error = '';\r\n                    newUserInfo.success = true;\r\n                    setUser(newUserInfo)\r\n                    updateProfile(user.name)\r\n                    setLoggedInUser(newUserInfo)\r\n                    history.replace(from);\r\n                })\r\n                .catch(error => {\r\n                    const newUserInfo = { ...user }\r\n                    newUserInfo.error = error.message;\r\n                    newUserInfo.success = false\r\n                    setUser(newUserInfo)\r\n                });\r\n        }\r\n\r\n        //new user\r\n        if (!newUser && user.email && user.password) {\r\n            firebase.auth().signInWithEmailAndPassword(user.email, user.password)\r\n                .then(res => {\r\n                    const newUserInfo = { ...user }\r\n                    newUserInfo.error = '';\r\n                    newUserInfo.success = true;\r\n                    setUser(newUserInfo)\r\n                    setLoggedInUser(newUserInfo)\r\n                    history.replace(from);\r\n                })\r\n                .catch(error => {\r\n                    const newUserInfo = { ...user }\r\n                    newUserInfo.error = error.message;\r\n                    newUserInfo.success = false\r\n                    setUser(newUserInfo)\r\n                });\r\n        }\r\n        e.preventDefault();\r\n    }\r\n\r\n    //profile name update\r\n    const updateProfile = name => {\r\n        const user = firebase.auth().currentUser;\r\n        user.updateProfile({\r\n            displayName: name\r\n        }).then(function () {\r\n            console.log(\"user name updated successfully\");\r\n        }).catch(function (error) {\r\n            console.log(error);\r\n        });\r\n    }\r\n    return (\r\n        <div className=\"login-page container\">\r\n            <div className=\"row align-items-center\">\r\n                <div className=\"col-md-6 shadow p-5\">\r\n                    {/* log in and register form  */}\r\n                    <Card style={{ width: '25rem', margin: '0 auto', border: 'none' }}>\r\n                        <Card.Body>\r\n                            {newUser ? <h3>Create an account</h3> : <h3>Login</h3>}\r\n\r\n                            <Form onSubmit={handleSubmit}>\r\n                                {newUser && <Form.Group controlId=\"formBasicText\">\r\n                                    <Form.Control onBlur={handleBlur} type=\"text\" name=\"name\" placeholder=\"First Name\" required />\r\n                                </Form.Group>}\r\n                                {newUser && <Form.Group controlId=\"formBasicText\">\r\n                                    <Form.Control onBlur={handleBlur} type=\"text\" name=\"name\" placeholder=\"Last Name\" required />\r\n                                </Form.Group>}\r\n\r\n\r\n                                <Form.Group controlId=\"formBasicEmail\">\r\n                                    <Form.Control onBlur={handleBlur} type=\"text\" name=\"email\" placeholder=\"Enter email\" required />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"formBasicPassword\">\r\n                                    <Form.Control onBlur={handleBlur} type=\"password\" name=\"password\" placeholder=\"Password\" required />\r\n                                </Form.Group>\r\n\r\n                                {!newUser && <Form.Group controlId=\"formBasicCheckbox\" className=\"d-flex \">\r\n                                    <Form.Check type=\"checkbox\" label=\"Remember Me\" /> <p className=\"forgetPassword\">Forget Password</p>\r\n                                </Form.Group>}\r\n\r\n                                <input className=\"BtnDesign\" type=\"submit\" value={newUser ? 'Create an account' : 'Login'} />\r\n\r\n                                {newUser ? <p>Already have an account?<span className=\"text-brand\" onClick={() => setNewUser(!newUser)}>Login</span></p> :\r\n                                    <p>Don't have account?<span className=\"text-brand\" onClick={() => setNewUser(!newUser)}>Create a account</span></p>}\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <button className=\"google-button\" onClick={handleGoogleSignIn}>Continue with Google</button>\r\n                </div>\r\n                <div className=\"col-md-6 d-none d-md-block align-self-end\">\r\n                    <img className=\"img-fluid\" src={LoginBg} alt=\"\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","C:\\Final-year-p400\\doctors-portal\\src\\components\\Login\\firebase.config.js",[],"C:\\Final-year-p400\\doctors-portal\\src\\components\\DashboardPage\\Dashboard\\Dashboard.js",["232","233"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport AppointmentByDate from '../../AppointmentsByDate/AppointmentsByDate';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport './Calender.css'\r\nimport { UserContext } from '../../../App';\r\n\r\nconst containerStyle = {\r\n    backgroundColor: '#F4FDF8',\r\n    height: '100%'\r\n}\r\n\r\nconst Dashboard = () => {\r\n    const [loggedInUser,setLoggedInUser]= useContext(UserContext);\r\n    const [selectedDate, setSelectedDate] = useState(new Date());\r\n\r\n    const [appointments, setAppointments] = useState([])\r\n\r\n    const handleDateChange = date => {\r\n        console.log(date);\r\n        setSelectedDate(date);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        \r\n        fetch(\"http://localhost:5000/appointmentByDate\", {\r\n            method: 'POST',\r\n            headers: { 'content-type': 'application/json' },\r\n            body: JSON.stringify({ date: selectedDate.toDateString(),email:loggedInUser.email }),\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => setAppointments(data))\r\n\r\n    },\r\n    [selectedDate])\r\n    return (\r\n        <section>\r\n            <div style={containerStyle} className='container-fluid row'>\r\n                <div className='col-md-2'>\r\n                    <Sidebar />\r\n                </div>\r\n                <div className=\"col-md-4 ml-5\">\r\n                  <h1 style={{color:'#19d3ae'}}>Appointments</h1>\r\n                    <Calendar\r\n                        onChange={handleDateChange}\r\n                        value={new Date()}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-5 \">\r\n                    <AppointmentByDate appointments={appointments} ></AppointmentByDate>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Dashboard;","C:\\Final-year-p400\\doctors-portal\\src\\components\\DashboardPage\\Sidebar\\Sidebar.js",["234","235","236","237"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Sidebar.css'\r\n\r\nimport { FaCogs, FaFileAlt, FaSignOutAlt, FaCalendarCheck, FaGripHorizontal, FaUsers, FaUserCheck } from \"react-icons/fa\";\r\n\r\nimport { useContext } from 'react';\r\nimport { UserContext } from '../../../App'\r\nimport { AppointmentContext } from '../../../App';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nconst Sidebar = () => {\r\n\r\n    \r\n\r\n    \r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n\r\n    const [isDoctor, setIsDoctor] = useState(false);\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:5000/isDoctor', {\r\n            method: 'POST',\r\n            headers: { 'content-type': 'application/json' },\r\n            body: JSON.stringify({ email: loggedInUser.email })\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => setIsDoctor(data));\r\n    }, [])\r\n\r\n    const logOutHandeler = () => {\r\n        sessionStorage.removeItem('name');\r\n        sessionStorage.removeItem('email');\r\n        localStorage.removeItem('response');\r\n    }\r\n    return (\r\n        <div className=\"sidebar d-flex flex-column justify-content-between col-2 py-5 px-4\" style={{ height: \"100vh\" }}>\r\n            <ul className=\"list-unstyled\">\r\n            <div>\r\n            <li>\r\n          <Link style={{textDecoration:'none'}} to=\"/\" className=\"text-white\" >\r\n             <HomeIcon/>Home\r\n           </Link>\r\n         </li> \r\n         <li>\r\n                    <Link style={{textDecoration:'none'}} to=\"/appointmentList\" className=\"text-white\">\r\n                        <FaCalendarCheck />Appointment\r\n                    </Link>\r\n                    \r\n                </li>\r\n            </div>\r\n                {/* {\r\n                    isDoctor && \r\n                    <li>\r\n                        <Link style={{textDecoration:'none'}} to=\"/dboard\" className=\"text-white\">\r\n                            <FaGripHorizontal />Dashboard\r\n                        </Link>\r\n                    </li>\r\n                    \r\n                   \r\n                } */}\r\n                 {isDoctor && <div>\r\n                    <li>\r\n                        <Link style={{textDecoration:'none'}} to=\"/dboard\" className=\"text-white\">\r\n                            <FaGripHorizontal />Dashboard\r\n                        </Link>\r\n                    </li>\r\n                    \r\n                  \r\n                        <li>\r\n                            <Link style={{textDecoration:'none'}} to=\"/allPatients\" className=\"text-white\">\r\n                                <FaUsers />Patients\r\n                            </Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link style={{textDecoration:'none'}} to=\"/prescription\" className=\"text-white\">\r\n                                <FaFileAlt />Prescriptions\r\n                            </Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link style={{textDecoration:'none'}} to=\"/addDoctor\" className=\"text-white\" >\r\n                                <FaUserCheck />Add Doctor\r\n                            </Link>\r\n                        </li>\r\n                        \r\n                        </div>}\r\n            </ul>\r\n          \r\n            <div>\r\n                <li onClick={logOutHandeler}>\r\n                    <Link style={{textDecoration:'none'}}  to=\"/\" className=\"text-white\"><FaSignOutAlt />Logout</Link>\r\n                </li>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sidebar;","C:\\Final-year-p400\\doctors-portal\\src\\components\\AppointmentsByDate\\AppointmentsByDate.js",[],"C:\\Final-year-p400\\doctors-portal\\src\\components\\AllPatients\\AllPatients.js",[],"C:\\Final-year-p400\\doctors-portal\\src\\components\\AppointmentDataTable\\AppointmentDataTable.js",[],"C:\\Final-year-p400\\doctors-portal\\src\\components\\Dboard\\Dboard.js",[],"C:\\Final-year-p400\\doctors-portal\\src\\components\\CounterCard\\CounterCard.js",[],"C:\\Final-year-p400\\doctors-portal\\src\\components\\AllAppTable\\AllAppTable.js",["238"],"import React from 'react';\nimport AllAppRow from '../AllAppRow/AllAppRow';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport { render } from 'react-dom';\n\nconst useStyles1 = makeStyles((theme) => ({\n    root: {\n      flexShrink: 0,\n      marginLeft: theme.spacing(2.5),\n    },\n  }));\n\n  const TablePaginationActions = (props) => {\n    const classes = useStyles1();\n    const theme = useTheme();\n    const { count, page, rowsPerPage, onChangePage } = props;\n  \n    const handleFirstPageButtonClick = (event) => {\n      onChangePage(event, 0);\n    };\n  \n    const handleBackButtonClick = (event) => {\n      onChangePage(event, page - 1);\n    };\n  \n    const handleNextButtonClick = (event) => {\n      onChangePage(event, page + 1);\n    };\n  \n    const handleLastPageButtonClick = (event) => {\n      onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n    };\n  \n    return (\n      <div className={classes.root}>\n        <IconButton\n          onClick={handleFirstPageButtonClick}\n          disabled={page === 0}\n          aria-label=\"first page\"\n        >\n          {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n        </IconButton>\n        <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n        </IconButton>\n        <IconButton\n          onClick={handleNextButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label=\"next page\"\n        >\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n        </IconButton>\n        <IconButton\n          onClick={handleLastPageButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label=\"last page\"\n        >\n          {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n        </IconButton>\n      </div>\n    );\n  }\n  \n  TablePaginationActions.propTypes = {\n    count: PropTypes.number.isRequired,\n    onChangePage: PropTypes.func.isRequired,\n    page: PropTypes.number.isRequired,\n    rowsPerPage: PropTypes.number.isRequired,\n  };\n\n  const useStyles2 = makeStyles({\n    table: {\n      minWidth: 500,\n    },\n  });\n\nconst AllAppTable = (props) => {\n\n\n  \n    const classes = useStyles2();\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  \n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.allAppointments.length - page * rowsPerPage);\n  \n    const handleChangePage = (event, newPage) => {\n      setPage(newPage);\n    };\n  \n    const handleChangeRowsPerPage = (event) => {\n      setRowsPerPage(parseInt(event.target.value, 10));\n      setPage(0);\n    };\n  \n    \n  \n    return (\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"custom pagination table\">\n            <TableHead>\n                    <TableRow>\n                        <TableCell><b>Date</b></TableCell>\n                        <TableCell align=\"center\"><b>Email</b></TableCell>\n                        <TableCell align=\"right\"><b>Name</b></TableCell>\n                        <TableCell align=\"right\"><b>Contact</b></TableCell>\n                        <TableCell align=\"right\"><b>Status</b></TableCell>\n                    </TableRow>\n            </TableHead>\n          <TableBody>\n            {(rowsPerPage > 0\n              ? props.allAppointments.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              : props.allAppointments\n            ).map((row) => (\n                <AllAppRow\n                    key={row.name}\n                    data={row}\n                ></AllAppRow>\n            ))}\n  \n            {emptyRows > 0 && (\n              <TableRow style={{ height: 53 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n                colSpan={3}\n                count={props.allAppointments.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </TableContainer>\n    );\n              \n};\n\nexport default AllAppTable;","C:\\Final-year-p400\\doctors-portal\\src\\components\\AllAppRow\\AllAppRow.js",["239","240"],"import React, { useState } from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Modal from 'react-modal';\nimport moment from 'moment'\nimport date from 'date-and-time';\n\nModal.setAppElement('#root')\n  \nconst AllAppRow = (props) => {\n    const [modalIsOpen,setModalIsOpen] = useState(false)\n    const [prescription, setPrescription] = useState(props.data.prescription)\n    \n    \n    const handlePrescription = (e) => {\n        console.log(prescription)\n        fetch('https://warm-journey-10486.herokuapp.com/updatePrescription', {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                id: props.data._id,\n                prescription\n            })\n        }).then(res => res.json())\n        setModalIsOpen(false)\n    }\n   \n       \n\n    return (\n        <TableRow>\n            <TableCell component=\"th\" scope=\"row\">\n             {props.data.date}\n            </TableCell>\n            <TableCell align=\"right\">{props.data.email}</TableCell>\n            <TableCell align=\"right\">{props.data.name}</TableCell>\n            <TableCell align=\"right\">{props.data.phone}</TableCell>\n            <TableCell align=\"right\">\n            {props.data.status}\n            </TableCell>\n            <Modal \n                isOpen={modalIsOpen} \n                onRequestClose={()=>setModalIsOpen(false)} \n                style={{\n                    overlay:{\n                        background: \"rgba(211,211,211,0.5)\"\n                    },\n                    content:{\n                        height:'400px',\n                        width: '600px',\n                        textAlign: 'center',\n                        borderRadius: '20px',\n                        margin: 'auto',\n                        padding: '25px 50px'\n                    }\n                }} \n            >   \n                <h5 className='text-info'>Prescription</h5>\n                <form onSubmit={handlePrescription}>\n                    <textarea \n                        name=\"prescription\"\n                        value={prescription}\n                        onChange={e => setPrescription(e.target.value)}\n                        cols=\"52\" rows=\"8\" \n                        required/>\n                    <br/>\n                    <input className='form-control btn btn-info' type=\"submit\" value=\"Enter\"/>\n                </form>\n            </Modal>\n        </TableRow>\n    );\n        \n    \n};\n\nexport default AllAppRow;","C:\\Final-year-p400\\doctors-portal\\src\\components\\AppointmentShortList\\AppointmentShortList.js",["241","242"],"\nimport React, { useState } from 'react';\nimport VisitButton from '../VisitButton/VisitButton'\nimport TableRow from './TableRow';\n\nconst AppointmentShortList = ({appointments}) => {\n  \n    return (\n        <table className=\"table table-borderless \">\n            <thead>\n                <tr>\n                <th className=\"text-secondary\" scope=\"col\">Name</th>\n                {/* <th className=\"text-secondary\" scope=\"col\">Phone</th> */}\n                <th className=\"text-secondary\" scope=\"col\">Email</th>\n                <th className=\"text-secondary\" scope=\"col\">Action</th>\n                </tr>\n            </thead>\n            <tbody>\n                {\n\n                  appointments.map((appointment, index) => \n                        <TableRow appointment={appointment}/>\n                    \n                    )\n                }\n            </tbody>\n        </table>\n    );\n};\n\nexport default AppointmentShortList;","C:\\Final-year-p400\\doctors-portal\\src\\components\\MainDashboard\\MainDashboard.js",["243","244","245"],"import React from 'react';\r\nimport Sidebar from '../DashboardPage/Sidebar/Sidebar';\r\nimport doctor from '../../images/doctor.png';\r\nimport './MainDashboard.css';\r\nimport AssignmentReturnIcon from '@material-ui/icons/AssignmentReturn';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst MainDashboard = () => {\r\n    return (\r\n\r\n       \r\n\r\n            <div className=\" align-items-center \">\r\n                <div className=\"col-md-5 sidebar\">\r\n                    <Sidebar />\r\n                </div>\r\n               <div  >\r\n              <div className=\"col-md-1 arrow \">\r\n                    <h1>Dashboard</h1>\r\n                </div>\r\n               \r\n           </div>\r\n               \r\n                <div className=\"col-md-6 doctor \">\r\n\r\n               <img className=\"img-fluid\" src={doctor} alt=\"\" />\r\n\r\n                </div>\r\n               \r\n\r\n    \r\n            </div>\r\n        \r\n    );\r\n};\r\n\r\nexport default MainDashboard;","C:\\Final-year-p400\\doctors-portal\\src\\components\\VisitButton\\VisitButton.js",[],"C:\\Final-year-p400\\doctors-portal\\src\\components\\DashboardAppointment\\DashboardAppointment.js",["246"],"C:\\Final-year-p400\\doctors-portal\\src\\components\\AppointmentShortList\\TableRow.js",[],"C:\\Final-year-p400\\doctors-portal\\src\\components\\PrescriptionTable\\PrescriptionTable.js",["247"],"import React from 'react';\r\nimport AllAppRow from '../PrescriptionRow/PrescriptionRow';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport { render } from 'react-dom';\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n    root: {\r\n      flexShrink: 0,\r\n      marginLeft: theme.spacing(2.5),\r\n    },\r\n  }));\r\n\r\n  const TablePaginationActions = (props) => {\r\n    const classes = useStyles1();\r\n    const theme = useTheme();\r\n    const { count, page, rowsPerPage, onChangePage } = props;\r\n  \r\n    const handleFirstPageButtonClick = (event) => {\r\n      onChangePage(event, 0);\r\n    };\r\n  \r\n    const handleBackButtonClick = (event) => {\r\n      onChangePage(event, page - 1);\r\n    };\r\n  \r\n    const handleNextButtonClick = (event) => {\r\n      onChangePage(event, page + 1);\r\n    };\r\n  \r\n    const handleLastPageButtonClick = (event) => {\r\n      onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n    };\r\n  \r\n    return (\r\n      <div className={classes.root}>\r\n        <IconButton\r\n          onClick={handleFirstPageButtonClick}\r\n          disabled={page === 0}\r\n          aria-label=\"first page\"\r\n        >\r\n          {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n        </IconButton>\r\n        <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={handleNextButtonClick}\r\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n          aria-label=\"next page\"\r\n        >\r\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={handleLastPageButtonClick}\r\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n          aria-label=\"last page\"\r\n        >\r\n          {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n        </IconButton>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  TablePaginationActions.propTypes = {\r\n    count: PropTypes.number.isRequired,\r\n    onChangePage: PropTypes.func.isRequired,\r\n    page: PropTypes.number.isRequired,\r\n    rowsPerPage: PropTypes.number.isRequired,\r\n  };\r\n\r\n  const useStyles2 = makeStyles({\r\n    table: {\r\n      minWidth: 500,\r\n    },\r\n  });\r\n\r\nconst AllAppTable = (props) => {\r\n\r\n\r\n  \r\n    const classes = useStyles2();\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  \r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.allAppointments.length - page * rowsPerPage);\r\n  \r\n    const handleChangePage = (event, newPage) => {\r\n      setPage(newPage);\r\n    };\r\n  \r\n    const handleChangeRowsPerPage = (event) => {\r\n      setRowsPerPage(parseInt(event.target.value, 10));\r\n      setPage(0);\r\n    };\r\n  \r\n    \r\n  \r\n    return (\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"custom pagination table\">\r\n            <TableHead>\r\n                    <TableRow>\r\n                        <TableCell><b>Date</b></TableCell>\r\n                        <TableCell align=\"center\"><b>Email</b></TableCell>\r\n                        <TableCell align=\"right\"><b>Name</b></TableCell>\r\n                        <TableCell align=\"right\"><b>Contact</b></TableCell>\r\n                        <TableCell align=\"right\"><b>Prescription</b></TableCell>\r\n                    </TableRow>\r\n            </TableHead>\r\n          <TableBody>\r\n            {(rowsPerPage > 0\r\n              ? props.allAppointments.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              : props.allAppointments\r\n            ).map((row) => (\r\n                <AllAppRow\r\n                    key={row.name}\r\n                    data={row}\r\n                ></AllAppRow>\r\n            ))}\r\n  \r\n            {emptyRows > 0 && (\r\n              <TableRow style={{ height: 53 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                colSpan={3}\r\n                count={props.allAppointments.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </TableContainer>\r\n    );\r\n              \r\n};\r\n\r\nexport default AllAppTable;","C:\\Final-year-p400\\doctors-portal\\src\\components\\PrescriptionRow\\PrescriptionRow.js",["248","249"],"import React, { useState } from 'react';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Modal from 'react-modal';\r\nimport moment from 'moment'\r\nimport date from 'date-and-time';\r\n\r\nModal.setAppElement('#root')\r\n  \r\nconst AllAppRow = (props) => {\r\n    const [modalIsOpen,setModalIsOpen] = useState(false)\r\n    const [prescription, setPrescription] = useState(props.data.prescription)\r\n    \r\n    \r\n    const handlePrescription = (e) => {\r\n        console.log(prescription)\r\n        fetch('http://localhost:5000/updatePrescription', {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                id: props.data._id,\r\n                prescription\r\n            })\r\n        }).then(res => res.json())\r\n        .then(data =>{\r\n            if(data){\r\n                alert('Status Successfully Changed');\r\n            };\r\n        })\r\n        setModalIsOpen(false)\r\n    }\r\n   \r\n       \r\n\r\n    return (\r\n        <TableRow>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n             {props.data.date}\r\n            </TableCell>\r\n            <TableCell align=\"right\">{props.data.email}</TableCell>\r\n            <TableCell align=\"right\">{props.data.name}</TableCell>\r\n            <TableCell align=\"right\">{props.data.phone}</TableCell>\r\n            <TableCell align=\"right\">\r\n                {\r\n                    prescription?<button\r\n                        onClick={()=>setModalIsOpen(true)} \r\n                        className='btn btn-info'>\r\n                            View\r\n                        </button>:<button \r\n                        onClick={()=>setModalIsOpen(true)}\r\n                        className=\"btn btn-secondary\">\r\n                            Add Now\r\n                        </button>\r\n                }\r\n            </TableCell>\r\n            <Modal \r\n                isOpen={modalIsOpen} \r\n                onRequestClose={()=>setModalIsOpen(false)} \r\n                style={{\r\n                    overlay:{\r\n                        background: \"rgba(211,211,211,0.5)\"\r\n                    },\r\n                    content:{\r\n                        height:'400px',\r\n                        width: '600px',\r\n                        textAlign: 'center',\r\n                        borderRadius: '20px',\r\n                        margin: 'auto',\r\n                        padding: '25px 50px'\r\n                    }\r\n                }} \r\n            >   \r\n                <h5 className='text-info'>Prescription</h5>\r\n                <form onSubmit={handlePrescription}>\r\n                    <textarea \r\n                        name=\"prescription\"\r\n                        value={prescription}\r\n                        onChange={e => setPrescription(e.target.value)}\r\n                        cols=\"52\" rows=\"8\" \r\n                        required/>\r\n                    <br/>\r\n                    <input className='form-control btn btn-info' type=\"submit\" value=\"Enter\"/>\r\n                </form>\r\n            </Modal>\r\n        </TableRow>\r\n    );\r\n        \r\n    \r\n};\r\n\r\nexport default AllAppRow;","C:\\Final-year-p400\\doctors-portal\\src\\components\\PrescriptionPage\\PrescriptionPage.js",["250","251"],"import React,{ useState, useEffect } from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport AllAppTable from '../PrescriptionTable/PrescriptionTable';\r\nimport CounterCard from '../CounterCard/CounterCard';\r\nimport { Link } from 'react-router-dom';\r\nimport './PrescriptionPage.css';\r\nimport Button from '@material-ui/core/Button'\r\nimport Sidebar from '../DashboardPage/Sidebar/Sidebar';\r\n\r\nconst DashBoard = () => {\r\n    const [allAppointments, setAllAppointments] = useState([])\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    useEffect(()=>{\r\n        fetch('http://localhost:5000/allAppointments')\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setIsLoading(false)\r\n            setAllAppointments(data)\r\n        })\r\n    },[])\r\n\r\n    // const getTotalApp = () => {\r\n    //     const data = {\r\n    //         count: allAppointments.length,\r\n    //         text: 'Total Appointments',\r\n    //         backgroundColor: '#5cb85c'\r\n    //     }\r\n    //     return data\r\n    // }\r\n\r\n    // const getTodayApp = () => {\r\n    //     const date = new Date()\r\n    //     const newArray = allAppointments.filter(app => {\r\n    //         return app.appointmentDate === date.toDateString()\r\n    //     })\r\n    //     const data = {\r\n    //         count: newArray.length,\r\n    //         text: \"Today's Appointments\",\r\n    //         backgroundColor: '#0275d8'\r\n    //     }\r\n    //     return data\r\n    // }\r\n\r\n    // const getPendingToday = () => {\r\n    //     const date = new Date()\r\n    //     const newArray = allAppointments.filter(app => {\r\n    //         return app.appointmentDate === date.toDateString() && !app.visited\r\n    //     })\r\n    //     const data = {\r\n    //         count: newArray.length,\r\n    //         text: \"Pending Appointments\",\r\n    //         backgroundColor: '#d9534f'\r\n    //     }\r\n    //     return data\r\n    // }\r\n\r\n    // const getPatient = () => {\r\n    //     const patientArray = [];\r\n    //     allAppointments.forEach(app => {\r\n    //         if(patientArray.indexOf(app.email) === -1){\r\n    //             patientArray.push(app.email)\r\n    //         }\r\n    //     })\r\n    //     const data = {\r\n    //         count: patientArray.length,\r\n    //         text: \"Today's Appointments\",\r\n    //         backgroundColor: '#d9534f'\r\n    //     }\r\n    //     return data\r\n    // }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className='d-flex'>\r\n                \r\n            <h4 className=\"text-info mt-3 mb-1\">Prescription</h4>\r\n            <Link to='/dashboard/appointment' className='back ml-5'><Button variant=\"contained\" color=\"primary\">Back</Button></Link>\r\n          \r\n          </div>\r\n            {/* <div className=\"row \">\r\n            \r\n                <div className=\"col-md-3 d-flex justify-content-center\">\r\n                    <CounterCard data={getPendingToday()}></CounterCard>\r\n                </div>\r\n                <div className=\"col-md-3 d-flex justify-content-center\">\r\n                    <CounterCard data={getTodayApp()}></CounterCard>\r\n                </div> \r\n                <div className=\"col-md-3 ml-5 d-flex justify-content-center\">\r\n                    <CounterCard data={getTotalApp()}></CounterCard>\r\n                </div>\r\n                <div className=\"col-md-3 patient d-flex justify-content-center\">\r\n                    <CounterCard data={getPatient()}></CounterCard>\r\n                </div>\r\n            </div> */}\r\n            \r\n            {\r\n                 \r\n                isLoading ? <CircularProgress className='mt-3' disableShrink>\r\n                   \r\n                </CircularProgress>:<AllAppTable allAppointments={allAppointments}>\r\n                   \r\n                </AllAppTable>\r\n                 \r\n            }\r\n           \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DashBoard;","C:\\Final-year-p400\\doctors-portal\\src\\components\\Testimonials\\Testimonials.js",[],"C:\\Final-year-p400\\doctors-portal\\src\\components\\Testimonial\\Testimonial.js",[],"C:\\Final-year-p400\\doctors-portal\\src\\components\\AddDoctor\\AddDoctor.js",[],{"ruleId":"252","replacedBy":"253"},{"ruleId":"254","replacedBy":"255"},{"ruleId":"256","severity":1,"message":"257","line":3,"column":8,"nodeType":"258","messageId":"259","endLine":3,"endColumn":14},{"ruleId":"260","severity":1,"message":"261","line":12,"column":36,"nodeType":"262","endLine":12,"endColumn":118},{"ruleId":"256","severity":1,"message":"263","line":3,"column":10,"nodeType":"258","messageId":"259","endLine":3,"endColumn":14},{"ruleId":"264","severity":1,"message":"265","line":14,"column":2,"nodeType":"262","endLine":14,"endColumn":35},{"ruleId":"256","severity":1,"message":"266","line":4,"column":10,"nodeType":"258","messageId":"259","endLine":4,"endColumn":20},{"ruleId":"256","severity":1,"message":"267","line":4,"column":22,"nodeType":"258","messageId":"259","endLine":4,"endColumn":33},{"ruleId":"256","severity":1,"message":"268","line":5,"column":8,"nodeType":"258","messageId":"259","endLine":5,"endColumn":12},{"ruleId":"256","severity":1,"message":"269","line":24,"column":7,"nodeType":"258","messageId":"259","endLine":24,"endColumn":10},{"ruleId":"256","severity":1,"message":"270","line":6,"column":24,"nodeType":"258","messageId":"259","endLine":6,"endColumn":39},{"ruleId":"256","severity":1,"message":"271","line":14,"column":12,"nodeType":"258","messageId":"259","endLine":14,"endColumn":24},{"ruleId":"256","severity":1,"message":"272","line":63,"column":19,"nodeType":"258","messageId":"259","endLine":63,"endColumn":28},{"ruleId":"256","severity":1,"message":"270","line":15,"column":25,"nodeType":"258","messageId":"259","endLine":15,"endColumn":40},{"ruleId":"273","severity":1,"message":"274","line":36,"column":5,"nodeType":"275","endLine":36,"endColumn":19,"suggestions":"276"},{"ruleId":"256","severity":1,"message":"277","line":5,"column":10,"nodeType":"258","messageId":"259","endLine":5,"endColumn":16},{"ruleId":"256","severity":1,"message":"278","line":9,"column":10,"nodeType":"258","messageId":"259","endLine":9,"endColumn":28},{"ruleId":"256","severity":1,"message":"270","line":17,"column":26,"nodeType":"258","messageId":"259","endLine":17,"endColumn":41},{"ruleId":"273","severity":1,"message":"274","line":29,"column":8,"nodeType":"275","endLine":29,"endColumn":10,"suggestions":"279"},{"ruleId":"256","severity":1,"message":"280","line":19,"column":10,"nodeType":"258","messageId":"259","endLine":19,"endColumn":16},{"ruleId":"256","severity":1,"message":"281","line":5,"column":8,"nodeType":"258","messageId":"259","endLine":5,"endColumn":14},{"ruleId":"256","severity":1,"message":"268","line":6,"column":8,"nodeType":"258","messageId":"259","endLine":6,"endColumn":12},{"ruleId":"256","severity":1,"message":"282","line":2,"column":17,"nodeType":"258","messageId":"259","endLine":2,"endColumn":25},{"ruleId":"256","severity":1,"message":"283","line":3,"column":8,"nodeType":"258","messageId":"259","endLine":3,"endColumn":19},{"ruleId":"256","severity":1,"message":"284","line":5,"column":8,"nodeType":"258","messageId":"259","endLine":5,"endColumn":28},{"ruleId":"256","severity":1,"message":"285","line":6,"column":8,"nodeType":"258","messageId":"259","endLine":6,"endColumn":14},{"ruleId":"256","severity":1,"message":"263","line":7,"column":10,"nodeType":"258","messageId":"259","endLine":7,"endColumn":14},{"ruleId":"273","severity":1,"message":"286","line":52,"column":3,"nodeType":"275","endLine":52,"endColumn":17,"suggestions":"287"},{"ruleId":"256","severity":1,"message":"280","line":19,"column":10,"nodeType":"258","messageId":"259","endLine":19,"endColumn":16},{"ruleId":"256","severity":1,"message":"281","line":5,"column":8,"nodeType":"258","messageId":"259","endLine":5,"endColumn":14},{"ruleId":"256","severity":1,"message":"268","line":6,"column":8,"nodeType":"258","messageId":"259","endLine":6,"endColumn":12},{"ruleId":"256","severity":1,"message":"288","line":4,"column":8,"nodeType":"258","messageId":"259","endLine":4,"endColumn":19},{"ruleId":"256","severity":1,"message":"289","line":8,"column":8,"nodeType":"258","messageId":"259","endLine":8,"endColumn":15},"no-native-reassign",["290"],"no-negated-in-lhs",["291"],"no-unused-vars","'doctor' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useHistory' is defined but never used.","'useLocation' is defined but never used.","'date' is defined but never used.","'now' is assigned a value but never used.","'setLoggedInUser' is assigned a value but never used.","'loggedInUser' is assigned a value but never used.","'validPass' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loggedInUser.email'. Either include it or remove the dependency array.","ArrayExpression",["292"],"'FaCogs' is defined but never used.","'AppointmentContext' is defined but never used.",["293"],"'render' is defined but never used.","'moment' is defined but never used.","'useState' is defined but never used.","'VisitButton' is defined but never used.","'AssignmentReturnIcon' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'handleDataLoad'. Either include it or remove the dependency array.",["294"],"'CounterCard' is defined but never used.","'Sidebar' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},"Update the dependencies array to be: [loggedInUser.email, selectedDate]",{"range":"301","text":"302"},"Update the dependencies array to be: [loggedInUser.email]",{"range":"303","text":"304"},"Update the dependencies array to be: [handleDataLoad, selectedDate]",{"range":"305","text":"306"},[1154,1168],"[loggedInUser.email, selectedDate]",[934,936],"[loggedInUser.email]",[1751,1765],"[handleDataLoad, selectedDate]"]